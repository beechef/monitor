/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package Client.GUI.Component;

import Client.GUI.Lib.GlobalVariable;
import Client.GUI.Lib.RoundBorder;
import java.awt.Color;
import java.text.DecimalFormat;

/**
 *
 * @author Admin
 */
public class HardwareGUI extends javax.swing.JPanel {

    /**
     * Creates new form HardWareGUI
     */
    public HardwareGUI() {
        initComponents();
        //set jlable color
        this.LabelHeader.setForeground(GlobalVariable.primaryColor);
        // paint rounded 
        setBorderRounded(this);
    }

    public void renderContent() {
        if (GlobalVariable.hardwareData != null) {

            // set cpu
            this.ClockSpeed.setText(GlobalVariable.hardwareData.getCpuClockSpeed());

            //
            float UsagePercent = Float.parseFloat(GlobalVariable.hardwareData.getCpuUsagePercent().split(" ")[0]);
            float roundedUsagePercent = (float) Math.round(UsagePercent * 100) / 100;
            this.UsagePercent.setText(roundedUsagePercent + " %");

            //
            this.ProcessCount.setText(GlobalVariable.hardwareData.getCpuProcessCount());
            this.PhysicalProcessorCount.setText(GlobalVariable.hardwareData.getCpuPhysicalProcessorCount());
            this.LogicalProcessorCount.setText(GlobalVariable.hardwareData.getCpuLogicalProcessorCount());
            this.ThreadCount.setText(GlobalVariable.hardwareData.getCpuThreadCount());
            //set ram

            //
            float usedMemory = Float.parseFloat(GlobalVariable.hardwareData.getUsedMemory().split(" ")[0]);
            float roundedsedMemory = (float) Math.round(usedMemory * 100) / 100;
            this.UsedMemory.setText(roundedsedMemory + " GB");

            //
            float totalMemory = Float.parseFloat(GlobalVariable.hardwareData.getTotalMemory().split(" ")[0]);
            float roundedTotalMemory = (float) Math.round(totalMemory * 100) / 100;
            this.TotalMemory.setText(roundedTotalMemory+" GB");

            //
            float availableMemory = Float.parseFloat(GlobalVariable.hardwareData.getAvailableMemory().split(" ")[0]);
            float roundedAvailableMemory = (float) Math.round(availableMemory * 100) / 100;
            this.AvailableMemory.setText(roundedAvailableMemory+" GB");
            //

            float availableMemoryPercent = (usedMemory / totalMemory) * 100;
            float rounded = (float) Math.round(availableMemoryPercent * 100) / 100;

            this.UsedMemoryPercent.setText(rounded + " %");
            this.AvailableMemoryPercent.setText(100 - rounded + " %");
            
            this.containerTable.removeAll();
            GlobalVariable.hardwareData.Disks.forEach(e->{
                this.containerTable.add(new RowDisk(e));
            });
            
            GlobalVariable.main.validate();
            GlobalVariable.main.repaint();
            
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        LabelHeader = new javax.swing.JLabel();
        panelCPU = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        UsagePercent = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        ProcessCount = new javax.swing.JLabel();
        ClockSpeed = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        ThreadCount = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        a = new javax.swing.JLabel();
        b = new javax.swing.JLabel();
        PhysicalProcessorCount = new javax.swing.JLabel();
        LogicalProcessorCount = new javax.swing.JLabel();
        panelRam = new javax.swing.JPanel();
        jLabel19 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel20 = new javax.swing.JLabel();
        TotalMemory = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        UsedMemory = new javax.swing.JLabel();
        UsedMemoryPercent = new javax.swing.JLabel();
        jLabel26 = new javax.swing.JLabel();
        AvailableMemory = new javax.swing.JLabel();
        AvailableMemoryPercent = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        containerTable = new javax.swing.JPanel();

        setBackground(new java.awt.Color(255, 255, 255));

        LabelHeader.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        LabelHeader.setText("Hardware");

        panelCPU.setBorder(new javax.swing.border.MatteBorder(null));
        panelCPU.setMaximumSize(new java.awt.Dimension(32767, 200));
        panelCPU.setMinimumSize(new java.awt.Dimension(0, 200));
        panelCPU.setOpaque(false);
        panelCPU.setPreferredSize(new java.awt.Dimension(464, 200));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel1.setText("CPU");

        jPanel1.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 0, 0, 0, new java.awt.Color(46, 79, 79)));
        jPanel1.setMaximumSize(new java.awt.Dimension(32767, 144));
        jPanel1.setMinimumSize(new java.awt.Dimension(0, 144));
        jPanel1.setOpaque(false);

        jLabel2.setText("Utilization");

        jLabel3.setText("Speed");

        UsagePercent.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        UsagePercent.setText("15 %");

        jLabel5.setText("Processes");

        ProcessCount.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        ProcessCount.setText("228");

        ClockSpeed.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        ClockSpeed.setText("3.00 GHz");

        jLabel8.setText("Threads");

        ThreadCount.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        ThreadCount.setText("4444");

        jLabel12.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 1, 0, 0, new java.awt.Color(46, 79, 79)));

        a.setText("Cores:");

        b.setText("Processors:");

        PhysicalProcessorCount.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        PhysicalProcessorCount.setText("6");

        LogicalProcessorCount.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        LogicalProcessorCount.setText("12");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(UsagePercent, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(ProcessCount, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(76, 76, 76))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(81, 81, 81))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(ThreadCount, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(79, 79, 79))
                    .addComponent(ClockSpeed, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 2, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(a, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(b, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(PhysicalProcessorCount, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(LogicalProcessorCount, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(UsagePercent, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(ClockSpeed, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(ProcessCount, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(ThreadCount, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(a, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(PhysicalProcessorCount, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(b, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(LogicalProcessorCount, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(28, 28, 28)))
                .addGap(11, 11, 11))
        );

        javax.swing.GroupLayout panelCPULayout = new javax.swing.GroupLayout(panelCPU);
        panelCPU.setLayout(panelCPULayout);
        panelCPULayout.setHorizontalGroup(
            panelCPULayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelCPULayout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(panelCPULayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelCPULayout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(26, 26, 26))
                    .addGroup(panelCPULayout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(388, 388, 388))))
        );
        panelCPULayout.setVerticalGroup(
            panelCPULayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelCPULayout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        panelRam.setBorder(new javax.swing.border.MatteBorder(null));
        panelRam.setMaximumSize(new java.awt.Dimension(32767, 200));
        panelRam.setMinimumSize(new java.awt.Dimension(0, 200));
        panelRam.setName(""); // NOI18N
        panelRam.setOpaque(false);
        panelRam.setPreferredSize(new java.awt.Dimension(356, 200));

        jLabel19.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel19.setText("RAM");

        jPanel2.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 0, 0, 0, new java.awt.Color(46, 79, 79)));
        jPanel2.setMaximumSize(new java.awt.Dimension(32767, 144));
        jPanel2.setMinimumSize(new java.awt.Dimension(0, 144));
        jPanel2.setOpaque(false);
        jPanel2.setPreferredSize(new java.awt.Dimension(237, 144));

        jLabel20.setText("Total size");

        TotalMemory.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        TotalMemory.setText("8.1 GB");

        jLabel22.setText("Use size");

        UsedMemory.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        UsedMemory.setText("7.2 GB");

        UsedMemoryPercent.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N

        jLabel26.setText("Free");

        AvailableMemory.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        AvailableMemory.setText("1 GB");

        AvailableMemoryPercent.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(TotalMemory, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel20, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(21, 21, 21)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(UsedMemory, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel22, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(UsedMemoryPercent, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel26, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(AvailableMemory, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(AvailableMemoryPercent, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel20, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel22, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel26, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(TotalMemory, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(UsedMemory, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(AvailableMemory, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(0, 0, 0)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(UsedMemoryPercent, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(AvailableMemoryPercent, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27))
        );

        javax.swing.GroupLayout panelRamLayout = new javax.swing.GroupLayout(panelRam);
        panelRam.setLayout(panelRamLayout);
        panelRamLayout.setHorizontalGroup(
            panelRamLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelRamLayout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(panelRamLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelRamLayout.createSequentialGroup()
                        .addComponent(jLabel19, javax.swing.GroupLayout.DEFAULT_SIZE, 61, Short.MAX_VALUE)
                        .addGap(267, 267, 267))
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, 328, Short.MAX_VALUE))
                .addGap(15, 15, 15))
        );
        panelRamLayout.setVerticalGroup(
            panelRamLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelRamLayout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(jLabel19)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, 149, Short.MAX_VALUE))
        );

        containerTable.setLayout(new javax.swing.BoxLayout(containerTable, javax.swing.BoxLayout.Y_AXIS));
        jScrollPane1.setViewportView(containerTable);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(LabelHeader, javax.swing.GroupLayout.PREFERRED_SIZE, 341, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(panelCPU, javax.swing.GroupLayout.DEFAULT_SIZE, 437, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(panelRam, javax.swing.GroupLayout.DEFAULT_SIZE, 361, Short.MAX_VALUE)))
                        .addGap(27, 27, 27))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(LabelHeader, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(panelRam, javax.swing.GroupLayout.DEFAULT_SIZE, 205, Short.MAX_VALUE)
                    .addComponent(panelCPU, javax.swing.GroupLayout.DEFAULT_SIZE, 205, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 210, Short.MAX_VALUE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel AvailableMemory;
    private javax.swing.JLabel AvailableMemoryPercent;
    private javax.swing.JLabel ClockSpeed;
    private javax.swing.JLabel LabelHeader;
    private javax.swing.JLabel LogicalProcessorCount;
    private javax.swing.JLabel PhysicalProcessorCount;
    private javax.swing.JLabel ProcessCount;
    private javax.swing.JLabel ThreadCount;
    private javax.swing.JLabel TotalMemory;
    private javax.swing.JLabel UsagePercent;
    private javax.swing.JLabel UsedMemory;
    private javax.swing.JLabel UsedMemoryPercent;
    private javax.swing.JLabel a;
    private javax.swing.JLabel b;
    private javax.swing.JPanel containerTable;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    public javax.swing.JPanel panelCPU;
    public javax.swing.JPanel panelRam;
    // End of variables declaration//GEN-END:variables

    private void setBorderRounded(HardwareGUI aThis) {
        aThis.panelCPU.setBorder(new RoundBorder(6, GlobalVariable.headerColor));
        aThis.panelRam.setBorder(new RoundBorder(6, GlobalVariable.headerColor));
    }
}
