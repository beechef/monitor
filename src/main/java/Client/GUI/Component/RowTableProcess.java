/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package Client.GUI.Component;

import Client.ClientInstance;
import Client.GUI.Lib.GlobalVariable;
import Client.GUI.Lib.ProcessDTO;
import Client.GUI.Lib.RoundBorder;
import SocketMessageReceiver.DataType.ProcessAction.ProcessActionRequestAdminSide;
import SocketMessageSender.CustomAdminSender.ProcessActionSender;
import java.awt.Color;
import java.awt.Cursor;
import javax.swing.ImageIcon;
import javax.swing.JLabel;

/**
 *
 * @author Admin
 */
public class RowTableProcess extends javax.swing.JPanel {

    /**
     * Creates new form HeaderTableProcess
     */
    private ProcessDTO process;

    public ProcessDTO getProcess() {
        return this.process;
    }

    public void setProcess(ProcessDTO process) {
        this.process = process;
    }

    public RowTableProcess(ProcessDTO processDTO) {
        this.process = processDTO;
        initComponents();
        //set Icon
        this.lableEndTask.setIcon(new ImageIcon(GlobalVariable.currentPath + GlobalVariable.urlCloseIcon));
        //set hover row
        setHoverRow(this);
        //set name process
        this.processName.setText(this.process.getName());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel3 = new javax.swing.JLabel();
        processName = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        lableEndTask = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));
        setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(204, 204, 204)));
        setMaximumSize(new java.awt.Dimension(2147483647, 46));
        setPreferredSize(new java.awt.Dimension(340, 46));
        setLayout(new javax.swing.BoxLayout(this, javax.swing.BoxLayout.LINE_AXIS));

        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setPreferredSize(new java.awt.Dimension(100, 16));
        add(jLabel3);

        processName.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        processName.setText("Name");
        add(processName);

        jTextField1.setBorder(null);
        jTextField1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jTextField1.setFocusable(false);
        jTextField1.setRequestFocusEnabled(false);
        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });
        add(jTextField1);

        lableEndTask.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lableEndTaskMouseClicked(evt);
            }
        });
        add(lableEndTask);

        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setPreferredSize(new java.awt.Dimension(110, 16));
        add(jLabel4);
    }// </editor-fold>//GEN-END:initComponents

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField1ActionPerformed

    private void lableEndTaskMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lableEndTaskMouseClicked
        //send repues
        System.out.println("Admin send request delete process "+this.process.getName());
        new ProcessActionSender(ClientInstance.tcpClient).send(null, new ProcessActionRequestAdminSide(this.process.getId(), ProcessActionRequestAdminSide.ProcessAction.KILL, GlobalVariable.tokenAdmin, GlobalVariable.selectedClientInfor.getID()));
//        paintRowTabeProcess();

    }//GEN-LAST:event_lableEndTaskMouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JLabel lableEndTask;
    private javax.swing.JLabel processName;
    // End of variables declaration//GEN-END:variables

    private void setHoverRow(RowTableProcess row) {
        row.addMouseListener(new java.awt.event.MouseAdapter() {

            @Override
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                //request pick client
                row.setBackground(GlobalVariable.activeColor);
                row.jTextField1.setBackground(GlobalVariable.activeColor);
            }

            @Override
            public void mouseExited(java.awt.event.MouseEvent evt) {
                row.setBackground(Color.WHITE);
                row.jTextField1.setBackground(Color.WHITE);
            }
        });
        row.jTextField1.addMouseListener(new java.awt.event.MouseAdapter() {

            @Override
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                //request pick client
                row.setBackground(GlobalVariable.activeColor);
                row.jTextField1.setBackground(GlobalVariable.activeColor);
            }

            @Override
            public void mouseExited(java.awt.event.MouseEvent evt) {
                row.setBackground(Color.WHITE);
                row.jTextField1.setBackground(Color.WHITE);
            }
        });

        row.lableEndTask.addMouseListener(new java.awt.event.MouseAdapter() {

            @Override
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                //request pick client
                row.lableEndTask.setCursor(new Cursor(Cursor.HAND_CURSOR));
                row.setBackground(GlobalVariable.activeColor);
                row.jTextField1.setBackground(GlobalVariable.activeColor);
            }

            @Override
            public void mouseExited(java.awt.event.MouseEvent evt) {
                row.lableEndTask.setCursor(new Cursor(Cursor.DEFAULT_CURSOR));
                row.setBackground(Color.WHITE);
                row.jTextField1.setBackground(Color.WHITE);
            }
        });

    }

    public void paintRowTabeProcess(int idProcess) {
//        System.out.println("delete " + this.process.getName());
        
        GlobalVariable.processList.remove(this.process);
        GlobalVariable.process.contentTable.removeAll();
        
        GlobalVariable.process.renderProcess(GlobalVariable.processList);
        GlobalVariable.main.validate();
        GlobalVariable.main.repaint();
        
    }

}
